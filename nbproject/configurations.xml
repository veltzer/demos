<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="69">
  <logicalFolder name="root" displayName="root" projectFiles="true">
    <df name="demos" root=".">
      <df name="ace" kind="SOURCE_LOGICAL_FOLDER">
        <df name="examples" kind="SOURCE_LOGICAL_FOLDER">
          <df name="autoptr" kind="SOURCE_LOGICAL_FOLDER">
            <in>autoptr.cc</in>
          </df>
          <df name="Chapter-1" kind="SOURCE_LOGICAL_FOLDER">
            <in>AceLog.cc</in>
            <in>Hello.cc</in>
          </df>
          <df name="Chapter-2" kind="SOURCE_LOGICAL_FOLDER">
            <in>Get_Opt.cc</in>
            <in>Message_Block.cc</in>
            <in>Message_Blocks.cc</in>
            <in>Message_Queue.cc</in>
            <in>Time_Value_Class.cc</in>
            <in>Timer.cc</in>
            <in>head_buffer.cc</in>
            <in>priority_buffer-modified.cc</in>
            <in>priority_buffer.cc</in>
            <in>tail_buffer-modified.cc</in>
            <in>tail_buffer.cc</in>
          </df>
          <df name="Chapter-3" kind="SOURCE_LOGICAL_FOLDER">
            <df name="ThreadManagement" kind="SOURCE_LOGICAL_FOLDER">
              <in>Async_Cancel.cc</in>
              <in>Coop_Cancel.cc</in>
              <in>ExitHandler.cc</in>
              <in>Pool.cc</in>
              <in>Priorities.cc</in>
              <in>PrioritiesCreateLowFirst.cc</in>
              <in>Signals.cc</in>
              <in>Signals2.cc</in>
              <in>Start_Hook.cc</in>
              <in>State.cc</in>
            </df>
            <in>AO-save.cc</in>
            <in>AO.cc</in>
            <in>AO2.cc</in>
            <in>Activate.cc</in>
            <in>Condition_Variables.cc</in>
            <in>Guards.cc</in>
            <in>Mutexes.cc</in>
            <in>Process_Mutex.cc</in>
            <in>Thread.cc</in>
            <in>Thread1.cc</in>
            <in>ThreadManager.cc</in>
            <in>ThreadsExample.cc</in>
            <in>reader_writer.cc</in>
            <in>task_sample.cc</in>
            <in>thread_specific.cc</in>
          </df>
          <df name="Chapter-4" kind="SOURCE_LOGICAL_FOLDER">
            <in>Basic.cc</in>
            <in>Basic_Robust.cc</in>
            <in>Iovec.cc</in>
            <in>Net_Ace.cc</in>
            <in>Net_Traditional.cc</in>
            <in>Server.cc</in>
          </df>
          <df name="Chapter-5" kind="SOURCE_LOGICAL_FOLDER">
            <in>Client.cc</in>
            <in>HAStatus-AC.cc</in>
            <in>HAStatus.cc</in>
            <in>Reschedule.cc</in>
            <in>Schedule_Timers.cc</in>
            <in>Timer_Cancel.cc</in>
            <in>Timer_State_Data.cc</in>
            <in>Timers.cc</in>
            <in>only_listen.cc</in>
          </df>
          <df name="Chapter-6" kind="SOURCE_LOGICAL_FOLDER">
            <in>Client.cc</in>
            <in>HAStatus.cc</in>
            <in>listen_only.cc</in>
          </df>
          <df name="Chapter-7" kind="SOURCE_LOGICAL_FOLDER">
            <in>ActiveObject.cc</in>
            <in>ActiveObjectComplete.cc</in>
            <in>Malloc.cc</in>
            <in>Malloc1.cc</in>
            <in>PI_Malloc.cc</in>
          </df>
          <df name="Chapter-8" kind="SOURCE_LOGICAL_FOLDER">
            <in>LF_ThreadPool.cc</in>
            <in>Log.cc</in>
            <in>StdinHandler.cc</in>
            <in>TP_Reactor.cc</in>
            <in>Use_Callback.cc</in>
            <in>Use_Callback2.cc</in>
            <in>Use_Syslog.cc</in>
          </df>
          <df name="Chapter-9" kind="SOURCE_LOGICAL_FOLDER">
            <in>ARGV_Example.cc</in>
            <in>Get_Opt.cc</in>
            <in>Get_Opt_Long.cc</in>
            <in>HA_Status.cc</in>
            <in>Mem_Map.cc</in>
            <in>Process_Manager_Death.cc</in>
            <in>Process_Manager_Spawn.cc</in>
            <in>Process_Mutex.cc</in>
            <in>Spawn.cc</in>
            <in>TSS.cc</in>
          </df>
        </df>
        <df name="exercises" kind="SOURCE_LOGICAL_FOLDER">
          <df name="Chapter-1" kind="SOURCE_LOGICAL_FOLDER">
            <in>solution.cc</in>
          </df>
          <df name="Chapter-2" kind="SOURCE_LOGICAL_FOLDER">
            <in>Exercise-2-sample.cc</in>
            <in>Exercise-2.cc</in>
            <in>Exercise-2a.cc</in>
            <in>Exercise-2b.cc</in>
          </df>
          <df name="Chapter-3" kind="SOURCE_LOGICAL_FOLDER">
            <in>Exercise-3a.cc</in>
            <in>solution.cc</in>
            <in>solution_imp.cc</in>
          </df>
          <df name="Chapter-4" kind="SOURCE_LOGICAL_FOLDER">
            <in>Exercise-4-Client.cc</in>
            <in>Exercise-4-Server.cc</in>
            <in>Exercise-4a-Client.cc</in>
            <in>Exercise-4a-Server.cc</in>
          </df>
          <df name="Chapter-5" kind="SOURCE_LOGICAL_FOLDER">
            <in>Exercise-5.cc</in>
            <in>Exercise-5a-Client.cc</in>
            <in>Exercise-5b.cc</in>
          </df>
          <df name="Chapter-6" kind="SOURCE_LOGICAL_FOLDER">
            <in>Exercise-6-Acceptor.cc</in>
            <in>Exercise-6-Connector.cc</in>
          </df>
          <df name="Chapter-7" kind="SOURCE_LOGICAL_FOLDER">
            <in>Exercise-7.cc</in>
            <in>Exercise-7a.cc</in>
            <in>Exercise-7b.cc</in>
          </df>
          <df name="Chapter-8" kind="SOURCE_LOGICAL_FOLDER">
            <in>Exercise-8.cc</in>
            <in>Log.cc</in>
          </df>
          <df name="Chapter-9" kind="SOURCE_LOGICAL_FOLDER">
            <in>Exercise-9.cc</in>
            <in>Exercise-9a.cc</in>
          </df>
        </df>
      </df>
      <df name="conf" kind="SOURCE_LOGICAL_FOLDER">
      </df>
      <df name="doc" kind="SOURCE_LOGICAL_FOLDER">
      </df>
      <df name="dojo" kind="SOURCE_LOGICAL_FOLDER">
        <df name="extend" kind="SOURCE_LOGICAL_FOLDER">
        </df>
        <df name="to_integrate" kind="SOURCE_LOGICAL_FOLDER">
          <df name="extend" kind="SOURCE_LOGICAL_FOLDER">
          </df>
        </df>
      </df>
      <df name="examples" kind="SOURCE_LOGICAL_FOLDER">
        <df name="default_constructor" kind="SOURCE_LOGICAL_FOLDER">
          <in>a.cc</in>
          <in>a.h</in>
          <in>b.cc</in>
          <in>b.h</in>
          <in>base.cc</in>
          <in>base.h</in>
          <in>main.cc</in>
          <in>use1.cc</in>
          <in>use2.cc</in>
        </df>
        <df name="dll" kind="SOURCE_LOGICAL_FOLDER">
          <in>hello.cc</in>
          <in>helloworld.cc</in>
          <in>helloworld.h</in>
        </df>
        <df name="dlopen" kind="SOURCE_LOGICAL_FOLDER">
          <in>add.c</in>
          <in>add.h</in>
          <in>main.c</in>
        </df>
        <df name="dlopen2" kind="SOURCE_LOGICAL_FOLDER">
          <df name="dlopen" kind="SOURCE_LOGICAL_FOLDER">
            <in>add.c</in>
            <in>add.h</in>
            <in>main.c</in>
          </df>
          <in>run_func_from_dll.cc</in>
        </df>
        <df name="dynamic_library" kind="SOURCE_LOGICAL_FOLDER">
          <in>add.c</in>
          <in>add.h</in>
          <in>main.c</in>
        </df>
        <df name="ftrace" kind="SOURCE_LOGICAL_FOLDER">
          <in>main.c</in>
        </df>
        <df name="ld_preload" kind="SOURCE_LOGICAL_FOLDER">
          <in>lib.cc</in>
          <in>main.cc</in>
        </df>
        <df name="make_dll" kind="SOURCE_LOGICAL_FOLDER">
          <in>main.cc</in>
          <in>mylib.cc</in>
          <in>mylib.h</in>
        </df>
        <df name="templates" kind="SOURCE_LOGICAL_FOLDER">
          <in>A.cc</in>
          <in>A.h</in>
          <in>use_a.cc</in>
        </df>
        <df name="templates2" kind="SOURCE_LOGICAL_FOLDER">
          <in>Foo.h</in>
          <in>bar.cc</in>
          <in>ins.cc</in>
          <in>zoo.cc</in>
        </df>
        <df name="vtables" kind="SOURCE_LOGICAL_FOLDER">
          <in>a.cc</in>
          <in>a.h</in>
          <in>a_complete.cc</in>
          <in>b.cc</in>
          <in>b.h</in>
          <in>b_complete.cc</in>
          <in>c.cc</in>
          <in>c.h</in>
          <in>c_complete.cc</in>
          <in>d.cc</in>
          <in>d.h</in>
          <in>d_complete.cc</in>
          <in>main.cc</in>
        </df>
      </df>
      <df name="include" kind="SOURCE_LOGICAL_FOLDER">
      </df>
      <df name="kernel" kind="SOURCE_LOGICAL_FOLDER">
        <in>div_buffer.h</in>
        <in>drv_bootmem.c</in>
        <in>drv_bootmem.mod.c</in>
        <in>drv_bug.c</in>
        <in>drv_bug.mod.c</in>
        <in>drv_cache.c</in>
        <in>drv_cache.mod.c</in>
        <in>drv_complete.c</in>
        <in>drv_complete.mod.c</in>
        <in>drv_div.c</in>
        <in>drv_div.mod.c</in>
        <in>drv_dma.c</in>
        <in>drv_dma.mod.c</in>
        <in>drv_errno.c</in>
        <in>drv_errno.mod.c</in>
        <in>drv_eventfd.c</in>
        <in>drv_eventfd.mod.c</in>
        <in>drv_get_free_pages.c</in>
        <in>drv_get_free_pages.mod.c</in>
        <in>drv_get_user_pages.c</in>
        <in>drv_get_user_pages.mod.c</in>
        <in>drv_ioctl.c</in>
        <in>drv_ioctl.mod.c</in>
        <in>drv_ioctl_close_race.c</in>
        <in>drv_ioctl_close_race.mod.c</in>
        <in>drv_iomem.c</in>
        <in>drv_iomem.mod.c</in>
        <in>drv_iserr.c</in>
        <in>drv_iserr.mod.c</in>
        <in>drv_kmalloc.c</in>
        <in>drv_kmalloc.mod.c</in>
        <in>drv_list.c</in>
        <in>drv_list.mod.c</in>
        <in>drv_min.c</in>
        <in>drv_min.mod.c</in>
        <in>drv_mmap.c</in>
        <in>drv_mmap.mod.c</in>
        <in>drv_mmap_simple.c</in>
        <in>drv_mmap_simple.mod.c</in>
        <in>drv_mmap_to_user.c</in>
        <in>drv_mmap_to_user.mod.c</in>
        <in>drv_null.c</in>
        <in>drv_null.mod.c</in>
        <in>drv_open_close_release.c</in>
        <in>drv_open_close_release.mod.c</in>
        <in>drv_rammap.c</in>
        <in>drv_rammap.mod.c</in>
        <in>drv_readwrite.c</in>
        <in>drv_readwrite.mod.c</in>
        <in>drv_request_module.c</in>
        <in>drv_request_module.mod.c</in>
        <in>drv_spin_lock.c</in>
        <in>drv_spin_lock.mod.c</in>
        <in>drv_timing.c</in>
        <in>drv_timing.mod.c</in>
        <in>ioctls.h</in>
        <in>kernel_helper.h</in>
        <in>shared.h</in>
        <in>test_bug.cc</in>
        <in>test_complete.cc</in>
        <in>test_div.cc</in>
        <in>test_errno.cc</in>
        <in>test_eventfd.cc</in>
        <in>test_get_free_pages.cc</in>
        <in>test_get_user_pages.cc</in>
        <in>test_ioctl.cc</in>
        <in>test_ioctl_close_race.cc</in>
        <in>test_kmalloc.cc</in>
        <in>test_list.cc</in>
        <in>test_min.cc</in>
        <in>test_mmap.cc</in>
        <in>test_mmap_parts.cc</in>
        <in>test_mmap_to_user.cc</in>
        <in>test_open_close_release.cc</in>
        <in>test_timing.cc</in>
      </df>
      <df name="kernel_cpp" kind="SOURCE_LOGICAL_FOLDER">
        <in>bottom.cc</in>
        <in>top.c</in>
      </df>
      <df name="lib_init_fini" kind="SOURCE_LOGICAL_FOLDER">
        <in>bar.c</in>
        <in>foo.c</in>
        <in>main.c</in>
      </df>
      <df name="makefiles" kind="SOURCE_LOGICAL_FOLDER">
        <df name="deps_test" kind="SOURCE_LOGICAL_FOLDER">
          <in>header.h</in>
          <in>main.c</in>
        </df>
        <df name="examples" kind="SOURCE_LOGICAL_FOLDER">
          <df name="full" kind="SOURCE_LOGICAL_FOLDER">
            <df name="binmain" kind="SOURCE_LOGICAL_FOLDER">
              <in>fake.c</in>
              <in>main.c</in>
            </df>
            <df name="libadd" kind="SOURCE_LOGICAL_FOLDER">
              <in>add.c</in>
              <in>add.h</in>
              <in>util.c</in>
            </df>
          </df>
          <df name="simple" kind="SOURCE_LOGICAL_FOLDER">
            <in>main.c</in>
            <in>other.c</in>
          </df>
        </df>
      </df>
      <df name="patch_and_diff" kind="SOURCE_LOGICAL_FOLDER">
        <in>threads_affinity.cc</in>
        <in>threads_affinity1.cc</in>
        <in>threads_affinity2.cc</in>
        <in>threads_affinity2.orig.cc</in>
      </df>
      <df name="scripts" kind="SOURCE_LOGICAL_FOLDER">
      </df>
      <df name="user_space" kind="SOURCE_LOGICAL_FOLDER">
        <df name="assertions" kind="SOURCE_LOGICAL_FOLDER">
          <in>assert.cc</in>
        </df>
        <df name="c++_language" kind="SOURCE_LOGICAL_FOLDER">
          <in>c_in_cpp.cc</in>
          <in>eh_frame.cc</in>
          <in>offsets.cc</in>
          <in>operator_new.cc</in>
          <in>placement.cc</in>
        </df>
        <df name="c_language" kind="SOURCE_LOGICAL_FOLDER">
          <in>bits.cc</in>
          <in>char_pointer.cc</in>
          <in>octal.cc</in>
          <in>pointer_types.cc</in>
          <in>pointers.cc</in>
          <in>sizes.cc</in>
          <in>struct_return.cc</in>
          <in>types.cc</in>
          <in>union_issues.cc</in>
          <in>using_argv.cc</in>
        </df>
        <df name="c_library" kind="SOURCE_LOGICAL_FOLDER">
          <in>buf_printing.cc</in>
          <in>hash.cc</in>
        </df>
        <df name="compiler_internals" kind="SOURCE_LOGICAL_FOLDER">
          <in>barrier.cc</in>
          <in>compile_constants.cc</in>
          <in>short_circuit.cc</in>
          <in>varargs.cc</in>
        </df>
        <df name="curses" kind="SOURCE_LOGICAL_FOLDER">
          <in>getch.cc</in>
          <in>unbuf.cc</in>
          <in>wide.cc</in>
        </df>
        <df name="debugging" kind="SOURCE_LOGICAL_FOLDER">
          <in>backtrace.cc</in>
          <in>cause_core_dump.cc</in>
          <in>gcore.cc</in>
          <in>gettimeofday.cc</in>
        </df>
        <df name="error_handling" kind="SOURCE_LOGICAL_FOLDER">
          <in>CreateFPE.cc</in>
          <in>CreateSEGV.cc</in>
          <in>ErrorHandle.cc</in>
          <in>LongJmp.cc</in>
          <in>LongJmpStackTrace.cc</in>
          <in>StackTraceExceptions.cc</in>
          <in>ThrowCatchFPE.cc</in>
          <in>ThrowCatchSigs.cc</in>
        </df>
        <df name="exiting" kind="SOURCE_LOGICAL_FOLDER">
          <in>basics.cc</in>
        </df>
        <df name="filesystem" kind="SOURCE_LOGICAL_FOLDER">
          <in>sparse.cc</in>
          <in>sparse_syscalls.cc</in>
        </df>
        <df name="getting_system_data" kind="SOURCE_LOGICAL_FOLDER">
          <in>uptime.cc</in>
        </df>
        <df name="internationalization" kind="SOURCE_LOGICAL_FOLDER">
          <in>wide.cc</in>
          <in>wide_override.cc</in>
        </df>
        <df name="io" kind="SOURCE_LOGICAL_FOLDER">
          <in>bad_fd.cc</in>
          <in>buffering.cc</in>
          <in>printf.cc</in>
        </df>
        <df name="ipc" kind="SOURCE_LOGICAL_FOLDER">
          <in>eventfd.cc</in>
          <in>pipe.cc</in>
        </df>
        <df name="libs" kind="SOURCE_LOGICAL_FOLDER">
          <in>hello.cc</in>
          <in>hello_gtk.cc</in>
          <in>hellobfd.cc</in>
          <in>helloc.cc</in>
          <in>hellocwd.cc</in>
          <in>hellofcmp.cc</in>
          <in>hellognome.cc</in>
          <in>hellognomemm.cc</in>
          <in>hellogtk.cc</in>
          <in>hellogtkmm.cc</in>
          <in>hellolog4cpp.cc</in>
          <in>hellomtl.cc</in>
          <in>hellomysql.cc</in>
          <in>hellomysqlpp.cc</in>
          <in>hellopg.cc</in>
          <in>helloqt.cc</in>
          <in>hellosdl.cc</in>
          <in>hellosigc.cc</in>
          <in>hellostl.cc</in>
          <in>hellostream.cc</in>
          <in>hellosyslog.cc</in>
          <in>hellowx.cc</in>
          <in>helloz.cc</in>
        </df>
        <df name="logging" kind="SOURCE_LOGICAL_FOLDER">
          <in>AceLog.cc</in>
          <in>syslog.cc</in>
        </df>
        <df name="memory_allocation" kind="SOURCE_LOGICAL_FOLDER">
          <in>malloc.cc</in>
          <in>malloc_lazy.cc</in>
          <in>mem_align.cc</in>
          <in>mmap_anon.cc</in>
        </df>
        <df name="multi_processing" kind="SOURCE_LOGICAL_FOLDER">
          <in>fork.cc</in>
          <in>nice.cc</in>
          <in>system.cc</in>
        </df>
        <df name="networking" kind="SOURCE_LOGICAL_FOLDER">
          <in>ipq_simple.cc</in>
          <in>socket.cc</in>
        </df>
        <df name="performance" kind="SOURCE_LOGICAL_FOLDER">
          <in>counting_up_counting_down.cc</in>
          <in>memset.cc</in>
          <in>rdtsc.cc</in>
          <in>sums_of_numbers.cc</in>
        </df>
        <df name="pre_processor" kind="SOURCE_LOGICAL_FOLDER">
          <in>arch.cc</in>
          <in>define.cc</in>
        </df>
        <df name="processes_and_stacks" kind="SOURCE_LOGICAL_FOLDER">
          <in>stack.cc</in>
        </df>
        <df name="programming" kind="SOURCE_LOGICAL_FOLDER">
          <in>unused_result_warning.cc</in>
        </df>
        <df name="real_time" kind="SOURCE_LOGICAL_FOLDER">
          <in>clock_gettime.cc</in>
          <in>clock_print.cc</in>
          <in>nanosleep.cc</in>
          <in>queues.cc</in>
          <in>threads.cc</in>
        </df>
        <df name="signals" kind="SOURCE_LOGICAL_FOLDER">
          <in>CatchSigs.cc</in>
          <in>breakout.cc</in>
          <in>signalfd.cc</in>
          <in>sigqueue.cc</in>
        </df>
        <df name="stamping_binaries" kind="SOURCE_LOGICAL_FOLDER">
          <in>gcc_date_macro.cc</in>
        </df>
        <df name="synchronization" kind="SOURCE_LOGICAL_FOLDER">
          <in>atomic_add.cc</in>
        </df>
        <df name="syscalls" kind="SOURCE_LOGICAL_FOLDER">
          <in>reboot.cc</in>
        </df>
        <df name="terminal" kind="SOURCE_LOGICAL_FOLDER">
          <in>carriage.cc</in>
          <in>detect.cc</in>
          <in>dialog.cc</in>
          <in>unbuffered.cc</in>
        </df>
        <df name="threading" kind="SOURCE_LOGICAL_FOLDER">
          <in>affinity.cc</in>
          <in>cpu_set.cc</in>
          <in>gettid.cc</in>
          <in>perror.cc</in>
          <in>priority.cc</in>
          <in>simple.cc</in>
          <in>spinlock.cc</in>
          <in>yield.cc</in>
          <in>zombie.cc</in>
        </df>
        <df name="threads_and_stacks" kind="SOURCE_LOGICAL_FOLDER">
          <in>soft_guard.cc</in>
        </df>
        <df name="us_and_kernel" kind="SOURCE_LOGICAL_FOLDER">
          <in>get_driver_version.cc</in>
        </df>
      </df>
    </df>
    <logicalFolder name="ExternalFiles"
                   displayName="Important Files"
                   projectFiles="false"
                   kind="IMPORTANT_FILES_FOLDER">
      <itemPath>Makefile</itemPath>
      <itemPath>Makefile-demos.mk</itemPath>
    </logicalFolder>
  </logicalFolder>
  <sourceRootList>
    <Elem>.</Elem>
  </sourceRootList>
  <projectmakefile>Makefile-demos.mk</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <compilerSet>GNU|GNU</compilerSet>
        <platform>2</platform>
      </toolsSet>
      <makefileType>
        <makeTool>
          <buildCommandWorkingDir>.</buildCommandWorkingDir>
          <buildCommand>$(MAKE) -f Makefile</buildCommand>
          <cleanCommand>$(MAKE) -f Makefile clean</cleanCommand>
          <executablePath></executablePath>
          <ccTool>
            <incDir>
              <pElem>.</pElem>
              <pElem>include</pElem>
            </incDir>
          </ccTool>
        </makeTool>
      </makefileType>
      <item path="examples/default_constructor/a.cc" ex="true" tool="1">
      </item>
      <item path="examples/default_constructor/a.h" ex="true" tool="3">
      </item>
      <item path="examples/default_constructor/b.cc" ex="true" tool="1">
      </item>
      <item path="examples/default_constructor/b.h" ex="true" tool="3">
      </item>
      <item path="examples/default_constructor/base.cc" ex="true" tool="1">
      </item>
      <item path="examples/default_constructor/base.h" ex="true" tool="3">
      </item>
      <item path="examples/default_constructor/main.cc" ex="true" tool="1">
      </item>
      <item path="examples/default_constructor/use1.cc" ex="true" tool="1">
      </item>
      <item path="examples/default_constructor/use2.cc" ex="true" tool="1">
      </item>
      <item path="examples/dll/hello.cc" ex="true" tool="1">
      </item>
      <item path="examples/dll/helloworld.cc" ex="true" tool="1">
      </item>
      <item path="examples/dll/helloworld.h" ex="true" tool="3">
      </item>
      <item path="examples/dlopen/add.c" ex="true" tool="0">
      </item>
      <item path="examples/dlopen/add.h" ex="true" tool="3">
      </item>
      <item path="examples/dlopen/main.c" ex="true" tool="0">
      </item>
      <item path="examples/dlopen2/dlopen/add.c" ex="true" tool="0">
      </item>
      <item path="examples/dlopen2/dlopen/add.h" ex="true" tool="3">
      </item>
      <item path="examples/dlopen2/dlopen/main.c" ex="true" tool="0">
      </item>
      <item path="examples/dlopen2/run_func_from_dll.cc" ex="true" tool="1">
      </item>
      <item path="examples/dynamic_library/add.c" ex="true" tool="0">
      </item>
      <item path="examples/dynamic_library/add.h" ex="true" tool="3">
      </item>
      <item path="examples/dynamic_library/main.c" ex="true" tool="0">
      </item>
      <item path="examples/ftrace/main.c" ex="true" tool="0">
      </item>
      <item path="examples/ld_preload/lib.cc" ex="true" tool="1">
      </item>
      <item path="examples/ld_preload/main.cc" ex="true" tool="1">
      </item>
      <item path="examples/make_dll/main.cc" ex="true" tool="1">
      </item>
      <item path="examples/make_dll/mylib.cc" ex="true" tool="1">
      </item>
      <item path="examples/make_dll/mylib.h" ex="true" tool="3">
      </item>
      <item path="examples/templates/A.cc" ex="true" tool="1">
      </item>
      <item path="examples/templates/A.h" ex="true" tool="3">
      </item>
      <item path="examples/templates/use_a.cc" ex="true" tool="1">
      </item>
      <item path="examples/templates2/Foo.h" ex="true" tool="3">
      </item>
      <item path="examples/templates2/bar.cc" ex="true" tool="1">
      </item>
      <item path="examples/templates2/ins.cc" ex="true" tool="1">
      </item>
      <item path="examples/templates2/zoo.cc" ex="true" tool="1">
      </item>
      <item path="examples/vtables/a.cc" ex="true" tool="1">
      </item>
      <item path="examples/vtables/a.h" ex="true" tool="3">
      </item>
      <item path="examples/vtables/a_complete.cc" ex="true" tool="1">
      </item>
      <item path="examples/vtables/b.cc" ex="true" tool="1">
      </item>
      <item path="examples/vtables/b.h" ex="true" tool="3">
      </item>
      <item path="examples/vtables/b_complete.cc" ex="true" tool="1">
      </item>
      <item path="examples/vtables/c.cc" ex="true" tool="1">
      </item>
      <item path="examples/vtables/c.h" ex="true" tool="3">
      </item>
      <item path="examples/vtables/c_complete.cc" ex="true" tool="1">
      </item>
      <item path="examples/vtables/d.cc" ex="true" tool="1">
      </item>
      <item path="examples/vtables/d.h" ex="true" tool="3">
      </item>
      <item path="examples/vtables/d_complete.cc" ex="true" tool="1">
      </item>
      <item path="examples/vtables/main.cc" ex="true" tool="1">
      </item>
      <item path="kernel/drv_bootmem.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_bug.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_cache.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_complete.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_div.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_dma.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_errno.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_eventfd.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_get_free_pages.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_get_user_pages.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_ioctl.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_ioctl_close_race.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_iomem.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_iserr.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_kmalloc.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_list.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_min.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_mmap.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_mmap_simple.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_mmap_to_user.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_null.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_open_close_release.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_rammap.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_readwrite.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_request_module.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_spin_lock.c" ex="true" tool="0">
      </item>
      <item path="kernel/drv_timing.c" ex="true" tool="0">
      </item>
      <item path="kernel/kernel_helper.h" ex="true" tool="3">
      </item>
      <item path="kernel_cpp/bottom.cc" ex="true" tool="1">
      </item>
      <item path="kernel_cpp/top.c" ex="true" tool="0">
      </item>
      <item path="lib_init_fini/bar.c" ex="true" tool="0">
      </item>
      <item path="lib_init_fini/foo.c" ex="true" tool="0">
      </item>
      <item path="lib_init_fini/main.c" ex="true" tool="0">
      </item>
      <item path="makefiles/deps_test/header.h" ex="true" tool="3">
      </item>
      <item path="makefiles/deps_test/main.c" ex="true" tool="0">
      </item>
      <item path="makefiles/examples/full/binmain/fake.c" ex="true" tool="0">
      </item>
      <item path="makefiles/examples/full/binmain/main.c" ex="true" tool="0">
      </item>
      <item path="makefiles/examples/full/libadd/add.c" ex="true" tool="0">
      </item>
      <item path="makefiles/examples/full/libadd/add.h" ex="true" tool="3">
      </item>
      <item path="makefiles/examples/full/libadd/util.c" ex="true" tool="0">
      </item>
      <item path="makefiles/examples/simple/main.c" ex="true" tool="0">
      </item>
      <item path="makefiles/examples/simple/other.c" ex="true" tool="0">
      </item>
      <item path="patch_and_diff/threads_affinity.cc" ex="true" tool="1">
      </item>
      <item path="patch_and_diff/threads_affinity1.cc" ex="true" tool="1">
      </item>
      <item path="patch_and_diff/threads_affinity2.cc" ex="true" tool="1">
      </item>
      <item path="patch_and_diff/threads_affinity2.orig.cc" ex="true" tool="1">
      </item>
    </conf>
  </confs>
</configurationDescriptor>
