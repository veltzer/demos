process statistics:
	sar, sadc(8), sa1(8), sa2(8), sadf(1), isag(1).
	mpstat
	vmstat
	pidstat
	free, uptime
	top, htop
	/proc, /sys, /debugfs filesystems
	ps pstree pgrep
	skill, pkill, kill, killall, killall5
	nice, renice, snice
	atop, atopsar
	mutrace (for lock contention)
io:
	iostat
	iotop, ionice
	hdparm, sdparm
	blktool

cpu:
	taskset
	cpulimit

process ids:
	pidof
	ptrace
	strace
	ltrace

used files:
	fuser, lsof

debugggers:
	valgrind

profilers:
	valgrind

core dumps:
	gdb
	gdbtui
	gcore
	resolve_stack_dump
	dwarves

kernel:
	crash
	slabtop
	kerneltop
	btrace

networking:
	ping/ping6
	traceroute/traceroute6
	jnettop
	iftop
	iptraf
	ngrep
	tcpdump
	wireshark
	dumpcap
	rawshark
	tshark
	editcap
	mergecap
	text2pcap
	ethtool
	netstat
	nc
	route
	ifconfig
	iwconfig
	iwlist
	telnet

java debugging:
	jstack
	jdb

programming tracing:
	mtrace (muntrace,malloc tracing).
	dmalloc(1)
	pthread_trace_* (pthread tracing).

power managements:
	powertop.

big tools:
	systemtap
	perf
	oprofile
	sysprof

pipe performance:
	pipemeter: cat /dev/zero | pipemeter | wc -c

watchdogs/fault helpers:
	catchsegv: part of libc.
		run like this: catchsegv [progname] [args...]
		if your program faults then it will print a stack trace + registers + position + program map.

mysql:
	mytop

programming:
	cdecl
	lint (various sorts)
