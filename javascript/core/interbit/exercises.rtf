{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf270
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww16320\viewh12400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\qc\pardirnatural

\f0\fs62 \cf0 Extreme JavaScript - Lab Book
\fs28 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\ql\qnatural\pardirnatural

\b \cf0 \
\

\fs38 Exercise 1- Objects and Arrays:
\fs34 \

\b0 Write an HTML page that lists items to add to a shopping cart.\
Use an object to store each item as a property with at least two values: the quantity and the price.\
Add button which list all items in the cart and calculates their total price.\
Use the supplied "cart.html" file. \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\qc\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\ql\qnatural\pardirnatural
\cf0 \

\b\fs38 Exercise 2- Functions and Closures:
\fs34 \

\b0 Try taking your Shopping Cart one step towards Object Oriented design.\
Change your code to have a Cart, Item and LineItem objects (using closures).\
The Carts object should have the following methods:\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\sl360\slmult1\ql\qnatural\pardirnatural
\ls1\ilvl0\cf0 {\listtext	\'95	}addToCart(Item)\
{\listtext	\'95	}checkout() // 
\f1\fs32 Returns a String representing the items to buy and total price  
\f0\fs34 \
\pard\tx560\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\ql\qnatural\pardirnatural
\cf0 The Item object should have two properties for name and price, make sure to have a validator checking the price is positive.\
The LineItem object should have a quantity property and a reference to the relevant item. Make sure to have a validator to check the quantity is positive.\
\
The UI of the cart should act the same.  \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\ql\qnatural\pardirnatural

\b\fs38 \cf0 Exercise 3- Object Oriented:
\fs34 \

\b0 Change all existing objects to use constructors and prototypes.\
In addition, add the object Customer to the application. The new object should contain the following properties:\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\sl360\slmult1\ql\qnatural\pardirnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}first name\
{\listtext	\'95	}last name\
{\listtext	\'95	}birth date\
and the method calculatePrice(cart), this method should calculate the price of the given cart for the given customer, senior customers (older than 65) gets 10% discount.\
In addition to the Customer object add the PreferredCustomer object which inherits Customer. Preferred customers gets discounts of 15%. \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl360\slmult1\ql\qnatural\pardirnatural
\cf0 \
 \

\b\fs38 Exercise 4- DOM:
\fs34 \

\b0 Change the entire application to use events.\
Events should be attached by using the DOM.\
\
\

\b\fs38 Exercise 5- AJAX:
\fs34 \

\b0 For each item added to the cart please perform an AJAX check verifying the availability of the item in the inventory.\
The server has a servlet returning the number of item in the inventory at the following url http://localhost:8080/cart/available?itemId=<item-id>.\
In case the a specific item is missing in the inventory, notify the user by using alert.\
\
}
